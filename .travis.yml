language: cpp

matrix:
  include:
    - os: osx
    - os: windows
    - os: linux
      dist: trusty
compiler: 
  - gcc

branches:
  except:
    - gh-pages

before_install:
  - eval "${MATRIX_EVAL}"
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository ppa:forkotov02/opt-qt-5.11.1-trusty -y
      sudo apt-get update -qq
      # On linux also get a newer g++. The old one won't work.
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      sudo apt-get update -qq
      # On linux, also get the linuxdeployqt tool to build the Appimage
      wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage
      chmod a+x linuxdeployqt-6-x86_64.AppImage
    fi
  
install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      # Qt Base
      cd /Users/travis/build
      curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtBase-5.13.1/Qtbase-5.13.1_mac.zip -o Qt.zip
      unzip -q -a Qt.zip
      cd $TRAVIS_BUILD_DIR
      cd ..
      export PATH=/Users/travis/build/Qt/bin:$PATH
      # QtTools. In order to make installation work, we have to extract it into the exact same folder as it was build in:
      mkdir -p /Users/travis/build/ChristianFeldmann/YUViewQt
      curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtDeployTools-5.13.1/MacDeployQt-5.13.1.zip -o MacDeployQt.zip
      unzip -q -a MacDeployQt.zip
      cp Qttools/bin/macdeployqt /Users/travis/build/Qt/bin/macdeployqt
      strip /Users/travis/build/Qt/bin/macdeployqt
      # QtCharts
      cd $TRAVIS_BUILD_DIR
      cd ..
      curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtCharts-5.13.1/QtCharts-5.13.1_mac.zip -o QtCharts.zip
      unzip -q -a QtCharts.zip
      ls -l
      cd QtCharts
      make install
      cd ..
      # libde265
      curl -L https://github.com/ChristianFeldmann/libde265/releases/download/v1.1/libde265.dylib -o libde265-internals.dylib
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      cd /c/Users/travis/build
      curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtBase-5.13.1/Qtbase-5.13.1_win.zip -o Qt.zip
      unzip -q -a Qt.zip
      cd $TRAVIS_BUILD_DIR
      cd ..
      export PATH=/c/Users/travis/build/Qt/bin:$PATH
      curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtCharts-5.13.1/QtCharts-5.13.1_win.zip -o QtCharts.zip
      unzip -q -a QtCharts.zip
      curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtDeployTools-5.13.1/WinDeployQt-5.13.1_win.zip -o WinDeployQt.zip
      unzip -q -a WinDeployQt.zip
      curl -L https://github.com/ChristianFeldmann/libde265/releases/download/v1.1/libde265.dll -o libde265.dll
      curl -L https://raw.githubusercontent.com/ChristianFeldmann/libde265/master/COPYING -o libde265License.txt
      curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/openSSL1.1.1/openSSL_1_1_1_stable_win.zip -o openSSL.zip
      unzip -q -a openSSL.zip
      mkdir wix311
      cd wix311
      curl -L https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip -o wix.zip
      unzip -q -a wix.zip
      cd ..
      ls -l
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get install -qq qt511base; source /opt/qt511/bin/qt511-env.sh
      sudo apt-get install -qq g++-8
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
    fi

script:
  - cd $TRAVIS_BUILD_DIR
  - |
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      ./buildWindows.bat
    else
      qmake -config release
      make -j 2
    fi

after_success:
  - cd $TRAVIS_BUILD_DIR
  - mkdir release_files
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      # Mac: build an "app" file
      which macdeployqt
      macdeployqt build/release/YUView.app -always-overwrite -verbose=2
      # check what YUView is linking against
      echo ------------------------------------
      otool -L $TRAVIS_BUILD_DIR/build/release/YUView.app/Contents/MacOs/YUView
      # copy the libde265 library
      cp $TRAVIS_BUILD_DIR/../libde265-internals.dylib build/release/YUView.app/Contents/MacOS/.
      cd build/release
      # Zip
      zip -r $TRAVIS_BUILD_DIR/release_files/YUView-MacOs.zip YUView.app
      if [ ${TRAVIS_BRANCH} = "master" ]; then ./deployment/deploy_to_github.sh; fi
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      make INSTALL_ROOT=appdir install
      ./linuxdeployqt-6-x86_64.AppImage appdir/usr/local/share/applications/de.rwth_aachen.ient.YUView.desktop -appimage -verbose=2
      mv YUView-*.AppImage YUView.AppImage
      cp YUView.AppImage $TRAVIS_BUILD_DIR/release_files
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      # create temporary folder for preparing the deployment package
      mkdir deploy
      cd deploy
      cp ../build/release/YUView.exe .
      $TRAVIS_BUILD_DIR/../Qttools/bin/windeployqt.exe --release --dir $TRAVIS_BUILD_DIR/deploy YUView.exe
      # Copy libraries and other misc files
      cp $TRAVIS_BUILD_DIR/../openSSL/*.dll .
      mkdir decoder
      cp $TRAVIS_BUILD_DIR/../libde265.dll decoder
      cp $TRAVIS_BUILD_DIR/../libde265License.txt decoder
      cp ../LICENSE.GPL3 .
      # Run the versioning tool
      cd $TRAVIS_BUILD_DIR
      python deployment/versioning.py -d deploy -o deploy/versioninfo.txt
      ls -l deploy
      # Package the installer and the zip file
      7z a $TRAVIS_BUILD_DIR/release_files/YUView-Win.zip ./deploy/*
      cd deployment/wix
      cp /c/Program\ Files\ \(x86\)/Common\ Files/Merge\ Modules/Microsoft_VC140_CRT_x64.msm .
      $TRAVIS_BUILD_DIR/../wix311/heat.exe dir ../../deploy -gg -dr APPLICATIONFOLDER -srd -sreg -cg YUViewComponents -out harvestedDirectory.wxs
      $TRAVIS_BUILD_DIR/../wix311/candle.exe -dConfiguration=Release -dOutDir=bin/Release/ -dTargetExt=.msi -dTargetFileName=YUViewSetup.msi -dTargetName=YUViewSetup -out obj/Release/ -arch x64 -ext TRAVIS_BUILD_DIR/../wix311/WixUIExtension.dll YUView.wxs
      $TRAVIS_BUILD_DIR/../wix311/candle.exe -dConfiguration=Release -dOutDir=bin/Release/ -dTargetExt=.msi -dTargetFileName=YUViewSetup.msi -dTargetName=YUViewSetup -out obj/Release/ -arch x64 harvestedDirectory.wxs
      $TRAVIS_BUILD_DIR/../wix311/Light.exe -b ../../deploy -out bin/Release/YUViewSetup.msi -pdbout bin/Release/YUViewSetup.wixpdb -cultures:null -ext $TRAVIS_BUILD_DIR/../wix311/WixUIExtension.dll -contentsfile obj/Release/YUViewSetup.wixproj.BindContentsFileListnull.txt -outputsfile obj/Release/YUViewSetup.wixproj.BindOutputsFileListnull.txt -builtoutputsfile obj/Release/YUViewSetup.wixproj.BindBuiltOutputsFileListnull.txt obj/Release/YUView.wixobj obj/Release/harvestedDirectory.wixobj
      cp $TRAVIS_BUILD_DIR/deployment/wix/bin/Release/YUViewSetup.msi $TRAVIS_BUILD_DIR/release_files
    fi
  - ls -l $TRAVIS_BUILD_DIR
  - ls -l $TRAVIS_BUILD_DIR/..
  - ls -l $TRAVIS_BUILD_DIR/release_files

deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: odHZCI3pFZPFSgLU0DkXadsYl0HQCjiP9rOUd9blA5n1gc+5ZUVv8o0IZAScbibu0kbizSkmSCn0Vovu5iYyN64/Oyl22Mozb6ZmYTU7DgZm4FhIqYvjgwx6Ik0xsk4uwp9UqMzZmBmC0DbTi/QnvClgRAB8+m3zA10Jgsj+xQ3QBe2NsP6vUdsuCBn7ia8Gdw9aMfVUYI/hrMdpqMZIZ5dXjbTR9kNsqa/6jOZ76U04ULsmTmll6zUcqA7L17JyK4Yf3Bl0q79ImmSjQuPnKyIgDJkQO2LekisrbAr+s7T9MgKTY9nNNr7POhVVDSHfBy8Vzogy0yzsbsPlHMfV+KCxDTp4ioBWKdbWKZbpSP5Kds7NtKVRP94v3kQwwlGF92O57SS1S9XNamO9y4sjdMRmXiYNC3PaM73jpqe0Hnu0/uyV8ZbJ23K6zLcSrL4DqSjolWL5XXMEqeMOJYxupYx8//tCXCOM8WJGf50jbbVvqNRk8boShdV3a9e0cVPzJVupwD95L9F71AnIJ5J+N5pzWV6rm0+CiMFrXg0e/HvnGI/lGVs45b/CCMrx/CT/5h1E3NsPHrTJyz8RvlxaICDK3pr80qmr1ta74ZMM0vDIK2fWWgtmQL/p/vrTCOpiNC57rP8rCsrAxsEW150/p4uPNpvJhhkS52h97GHf3AY=
  file_glob: true
  file: release_files/*
  on:
    repo: IENT/YUView
    tags: true
